<?xml version="1.0"?>
<launch>
    <!-- ============================ SETTINGS ============================= -->

    <!-- Node frequency: the frequency [Hz] which rate.sleep() function will
    attempt to maintain in the main_loop. -->
    <arg 
    name="node_frequency" 
    default="1000"/>

    <!-- Output folder path: the absolute path to the main data folder (no slash
    at the end). The standard file stucture will be generated in this folder:
    
    experiment (output_folder_path):
    |_____p0 (folder):
    |   |
    |   |_____m0 (folder):
    |   |   |
    |   |   |_____t0 (folder):
    |   |   |_____t1 (folder):
    |   |   |_____...
    |   |   
    |   |_____m1 (folder):
    |   |   |_____t0 (folder):
    |   |   |_____t1 (folder):
    |   |   |_____...
    |   |   
    |   |_____...
    |
    |_____p1 (folder):
    |   |
    |   |_____...
    |
    |_____...

     -->
    <arg
    name="output_folder_path" 
    default="/home/fetch/data"/>

    <!-- Output file name: the file name in the following format:
    "experiment-name_p0_m0_t0.csv" (no slashes). Experiment-name should be
    separated with dashes. -->
    <arg
    name="output_file_name" 
    default=""/>

    <!-- Data recording period: time in seconds between data storing. -->
    <arg 
    name="data_recording_period" 
    default="0.5"/>

    <!-- File writing period: time in seconds between file writings. -->
    <arg 
    name="file_writing_period" 
    default="10"/>

    <!-- Topics Specifiers Columns: specifies which data topics are recordered.
    Format (a separate line for each entry, whitespaces between, a dot "." in
    front of the message_specifier): 
    "/topic_name .message_specifier csv_column_name"

    /topic_name: is the topic name. 
    .message_specifier: specifies which field within the topic message should be
    recorded. If no message_specifier is required, place a single dot.
    csv_column_name - the column name in the output .csv file, where the data
    will be stored. 
    
    Example: 
    default="
    /right/controller_feedback/joystick . right_joystick
    /right/controller_feedback/joystick .button right_joystick_button
    "/>  
 
    -->
    <arg 
    name="topics_specifiers_columns" 
    default="

    /my_gen3/joint_states .position[0] joint_0_position
    /my_gen3/joint_states .position[1] joint_1_position
    /my_gen3/joint_states .position[2] joint_2_position
    /my_gen3/joint_states .position[3] joint_3_position
    /my_gen3/joint_states .position[4] joint_4_position
    /my_gen3/joint_states .position[5] joint_5_position
    /my_gen3/joint_states .position[6] joint_6_position

    /z_chest_pos .position chest_position

    /my_gen3/base_feedback .actuators[0].fault_bank_a joint_error

    /my_gen3/relaxed_ik/commanded_pose_gcs .position.x commanded_pose_gcs_x
    /my_gen3/relaxed_ik/commanded_pose_gcs .position.y commanded_pose_gcs_y
    /my_gen3/relaxed_ik/commanded_pose_gcs .position.z commanded_pose_gcs_z
    
    /my_gen3/relaxed_ik/joint_angle_solutions .joint_angles relaxed_ik_angles_solution
    
    /my_gen3/positional_control/input_pose .position.x input_pose_x
    /my_gen3/positional_control/input_pose .position.y input_pose_y
    /my_gen3/positional_control/input_pose .position.z input_pose_z

    /my_gen3/grasping .data has_grasped

    /my_gen3/pick_and_place .data task_state

    /my_gen3/target_hologram .position.x anchor_to_target_x
    /my_gen3/target_hologram .position.y anchor_to_target_y
    /my_gen3/target_hologram .position.z anchor_to_target_z

    /my_gen3/tf_base_tool_frame .position.x base_to_tool_frame_x
    /my_gen3/tf_base_tool_frame .position.y base_to_tool_frame_y
    /my_gen3/tf_base_tool_frame .position.z base_to_tool_frame_z

    /my_gen3/target_workspace_cam .x camera_to_target_x
    /my_gen3/target_workspace_cam .y camera_to_target_y
    /my_gen3/target_workspace_cam .z camera_to_target_z

    /my_gen3/tf_base_target_cam  .position.x base_to_target_x
    /my_gen3/tf_base_target_cam  .position.y base_to_target_y
    /my_gen3/tf_base_target_cam  .position.z base_to_target_z

    /workspace_cam/target_position_in_frame .data[0] target_position_fov_x
    /workspace_cam/target_position_in_frame .data[1] target_position_fov_y

    /user_control .data user
    /remote_interface/buttons .data button_pressed
    
    /target_counter .data target_number
    /target_identifier .id target_id
    /target_identifier .name target_name
    /target_identifier .expiration target_expiration

    /remote_interface/gaze .data[0] gaze_x
    /remote_interface/gaze .data[1] gaze_y

    /remote_interface/pupil_diameter .data[0] right_pupil_diameter
    /remote_interface/pupil_diameter .data[1] left_pupil_diameter

    /remote_interface/calibrated_pupil_diameter .data[0] calibrated_right_pupil_diameter
    /remote_interface/calibrated_pupil_diameter .data[1] calibrated_left_pupil_diameter
    "/>
    <!-- default="$(find data_collector)/topics_specifiers_columns.yaml"/> -->

    <!-- ======================== END OF SETTINGS ========================== -->
    
    <!-- Data writer: -->     
    <node 
    pkg="data_collector" 
    type="data_writer.py"
    name="data_writer" 
    output="screen">
        <param 
        name="node_frequency" 
        value="$(arg node_frequency)"/>
        <param 
        name="output_folder_path" 
        value="$(arg output_folder_path)"/>
        <param 
        name="output_file_name" 
        value="$(arg output_file_name)"/>
        <param 
        name="data_recording_period" 
        value="$(arg data_recording_period)"/>
        <param 
        name="file_writing_period" 
        value="$(arg file_writing_period)"/>
        <param 
        name="topics_specifiers_columns" 
        value="$(arg topics_specifiers_columns)"/>
    </node>     
</launch>